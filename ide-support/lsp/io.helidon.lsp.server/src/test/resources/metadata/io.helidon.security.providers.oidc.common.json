[{"module":"io.helidon.security.providers.oidc.common","types":[{"annotatedType":"io.helidon.security.providers.oidc.common.OidcConfig.Builder","description":"Open ID Connect configuration","type":"io.helidon.security.providers.oidc.common.OidcConfig","producers":["io.helidon.security.providers.oidc.common.OidcConfig.Builder#build()","io.helidon.security.providers.oidc.common.OidcConfig#create(io.helidon.config.Config)"],"options":[{"description":"URI of the identity server, base used to retrieve OIDC metadata.","key":"identity-uri","method":"io.helidon.security.providers.oidc.common.OidcConfig.Builder#identityUri(java.net.URI)","type":"java.net.URI"},{"defaultValue":"/oidc/redirect","description":"URI to register web server component on, used by the OIDC server to\n redirect authorization requests to after a user logs in or approves\n scopes.\n Note that usually the redirect URI configured here must be the\n same one as configured on OIDC server.\n\n <p>\n Defaults to {@value #DEFAULT_REDIRECT_URI}","key":"redirect-uri","method":"io.helidon.security.providers.oidc.common.OidcConfig.Builder#redirectUri(java.lang.String)"},{"defaultValue":"/","description":"Path the cookie is valid for.\n Defaults to \"/\".","key":"cookie-path","method":"io.helidon.security.providers.oidc.common.OidcConfig.Builder#cookiePath(java.lang.String)"},{"description":"Audience of issued tokens.","key":"audience","method":"io.helidon.security.providers.oidc.common.OidcConfig.Builder#audience(java.lang.String)"},{"description":"When using cookie, used to set MaxAge attribute of the cookie, defining how long\n the cookie is valid.\n Not used by default.","key":"cookie-max-age-seconds","method":"io.helidon.security.providers.oidc.common.OidcConfig.Builder#cookieMaxAgeSeconds(long)","type":"java.lang.Long"},{"defaultValue":"false","description":"By default the client should redirect to the identity server for the user to log in.\n This behavior can be overridden by setting redirect to false. When token is not present in the request, the client\n will not redirect and just return appropriate error response code.","key":"redirect","method":"io.helidon.security.providers.oidc.common.OidcConfig.Builder#redirect(boolean)","type":"java.lang.Boolean"},{"description":"Proxy host to use. When defined, triggers usage of proxy for HTTP requests.\n Setting to empty String has the same meaning as setting to null - disables proxy.","key":"proxy-host","method":"io.helidon.security.providers.oidc.common.OidcConfig.Builder#proxyHost(java.lang.String)"},{"defaultValue":"false","description":"Whether to use a query parameter to send JWT token from application to this\n server.","key":"query-param-use","method":"io.helidon.security.providers.oidc.common.OidcConfig.Builder#useParam(java.lang.Boolean)","type":"java.lang.Boolean"},{"defaultValue":"80","description":"Proxy port.\n Defaults to {@value #DEFAULT_PROXY_PORT}","key":"proxy-port","method":"io.helidon.security.providers.oidc.common.OidcConfig.Builder#proxyPort(int)","type":"java.lang.Integer"},{"description":"Domain the cookie is valid for.\n Not used by default.","key":"cookie-domain","method":"io.helidon.security.providers.oidc.common.OidcConfig.Builder#cookieDomain(java.lang.String)"},{"defaultValue":"http","description":"Proxy protocol to use when proxy is used.\n Defaults to {@value #DEFAULT_PROXY_PROTOCOL}.","key":"proxy-protocol","method":"io.helidon.security.providers.oidc.common.OidcConfig.Builder#proxyProtocol(java.lang.String)"},{"defaultValue":"true","description":"Use JWK (a set of keys to validate signatures of JWT) to validate tokens.\n Use this method when you want to use default values for JWK or introspection endpoint URI.","key":"validate-jwt-with-jwk","method":"io.helidon.security.providers.oidc.common.OidcConfig.Builder#validateJwtWithJwk(java.lang.Boolean)","type":"java.lang.Boolean"},{"defaultValue":"5","description":"Configure maximal number of redirects when redirecting to an OIDC provider within a single authentication\n attempt.\n <p>\n Defaults to {@value #DEFAULT_MAX_REDIRECTS}","key":"max-redirects","method":"io.helidon.security.providers.oidc.common.OidcConfig.Builder#maxRedirects(int)","type":"java.lang.Integer"},{"description":"Client secret as generated by OIDC server.\n Used to authenticate this application with the server when requesting\n JWT based on a code.","key":"client-secret","method":"io.helidon.security.providers.oidc.common.OidcConfig.Builder#clientSecret(java.lang.String)"},{"description":"Full URI of this application that is visible from user browser.\n Used to redirect request back from identity server after successful login.","key":"frontend-uri","method":"io.helidon.security.providers.oidc.common.OidcConfig.Builder#frontendUri(java.lang.String)"},{"defaultValue":"h_ra","description":"Configure the parameter used to store the number of attempts in redirect.\n <p>\n Defaults to {@value #DEFAULT_ATTEMPT_PARAM}","key":"redirect-attempt-param","method":"io.helidon.security.providers.oidc.common.OidcConfig.Builder#redirectAttemptParam(java.lang.String)"},{"defaultValue":"LAX","description":"When using cookie, used to set the SameSite cookie value. Can be\n \"Strict\" or \"Lax\".","key":"cookie-same-site","method":"io.helidon.security.providers.oidc.common.OidcConfig.Builder#cookieSameSite(io.helidon.common.http.SetCookie.SameSite)","type":"io.helidon.common.http.SetCookie.SameSite","allowedValues":[{"description":"","value":"LAX"},{"description":"","value":"STRICT"},{"description":"","value":"NONE"}]},{"description":"URI of an authorization endpoint used to redirect users to for logging-in.\n\n If not defined, it is obtained from #oidcMetadata(Resource), if that is not defined\n an attempt is made to use #identityUri(URI)/oauth2/v1/authorize.","key":"authorization-endpoint-uri","method":"io.helidon.security.providers.oidc.common.OidcConfig.Builder#authorizationEndpointUri(java.net.URI)","type":"java.net.URI"},{"description":"Resource configuration for OIDC Metadata\n containing endpoints to various identity services, as well as information about the identity server.","key":"oidc-metadata.resource","method":"io.helidon.security.providers.oidc.common.OidcConfig.Builder#oidcMetadata(io.helidon.common.configurable.Resource)","type":"io.helidon.common.configurable.Resource"},{"defaultValue":"accessToken","description":"Name of a query parameter that contains the JWT token when parameter is used.","key":"query-param-name","method":"io.helidon.security.providers.oidc.common.OidcConfig.Builder#paramName(java.lang.String)"},{"description":"Assign cross-origin resource sharing settings.","key":"cors","method":"io.helidon.security.providers.oidc.common.OidcConfig.Builder#crossOriginConfig(io.helidon.webserver.cors.CrossOriginConfig)","type":"io.helidon.webserver.cors.CrossOriginConfig"},{"description":"Endpoint to use to validate JWT.\n Either use this or set #signJwk(JwkKeys) or #signJwk(Resource).","key":"introspect-endpoint-uri","method":"io.helidon.security.providers.oidc.common.OidcConfig.Builder#introspectEndpointUri(java.net.URI)","type":"java.net.URI"},{"defaultValue":"false","description":"Force HTTPS for redirects to identity provider.\n Defaults to `false`.","key":"force-https-redirects","method":"io.helidon.security.providers.oidc.common.OidcConfig.Builder#forceHttpsRedirects(boolean)","type":"java.lang.Boolean"},{"defaultValue":"true","description":"When using cookie, if set to true, the HttpOnly attribute will be configured.\n Defaults to {@value OidcCookieHandler.Builder#DEFAULT_HTTP_ONLY}.","key":"cookie-http-only","method":"io.helidon.security.providers.oidc.common.OidcConfig.Builder#cookieHttpOnly(java.lang.Boolean)","type":"java.lang.Boolean"},{"defaultValue":"30000","description":"Timeout of calls using web client.","key":"client-timeout-millis","method":"io.helidon.security.providers.oidc.common.OidcConfig.Builder#clientTimeout(java.time.Duration)","type":"java.time.Duration"},{"description":"A TokenHandler to\n process header containing a JWT.\n Default is \"Authorization\" header with a prefix \"bearer \".","key":"header-token","method":"io.helidon.security.providers.oidc.common.OidcConfig.Builder#headerTokenHandler(io.helidon.security.util.TokenHandler)","type":"io.helidon.security.util.TokenHandler"},{"defaultValue":"openid","description":"Configure base scopes.\n By default this is {@value DEFAULT_BASE_SCOPES}.\n If scope has a qualifier, it must be used here.","key":"base-scopes","method":"io.helidon.security.providers.oidc.common.OidcConfig.Builder#baseScopes(java.lang.String)"},{"description":"A resource pointing to JWK with public keys of signing certificates used\n to validate JWT.","key":"sign-jwk.resource","method":"io.helidon.security.providers.oidc.common.OidcConfig.Builder#signJwk(io.helidon.common.configurable.Resource)","type":"io.helidon.common.configurable.Resource"},{"defaultValue":"true","description":"Whether to expect JWT in a header field.","key":"header-use","method":"io.helidon.security.providers.oidc.common.OidcConfig.Builder#useHeader(java.lang.Boolean)","type":"java.lang.Boolean"},{"defaultValue":"@default","description":"Configure one of the supported types of identity servers.\n\n If the type does not have an explicit mapping, a warning is logged and the default implementation is used.","key":"server-type","method":"io.helidon.security.providers.oidc.common.OidcConfig.Builder#serverType(java.lang.String)"},{"description":"Issuer of issued tokens.","key":"issuer","method":"io.helidon.security.providers.oidc.common.OidcConfig.Builder#issuer(java.lang.String)"},{"defaultValue":"true","description":"If set to true, metadata will be loaded from default (well known)\n location, unless it is explicitly defined using oidc-metadata-resource. If set to false, it would not be loaded\n even if oidc-metadata-resource is not defined. In such a case all URIs must be explicitly defined (e.g.\n token-endpoint-uri).","key":"oidc-metadata-well-known","method":"io.helidon.security.providers.oidc.common.OidcConfig.Builder#oidcMetadataWellKnown(java.lang.Boolean)","type":"java.lang.Boolean"},{"defaultValue":"false","description":"When using cookie, if set to true, the Secure attribute will be configured.\n Defaults to false.","key":"cookie-secure","method":"io.helidon.security.providers.oidc.common.OidcConfig.Builder#cookieSecure(java.lang.Boolean)","type":"java.lang.Boolean"},{"description":"Audience of the scope required by this application. This is prefixed to\n the scope name when requesting scopes from the identity server.\n Defaults to empty string.","key":"scope-audience","method":"io.helidon.security.providers.oidc.common.OidcConfig.Builder#scopeAudience(java.lang.String)"},{"defaultValue":"CLIENT_SECRET_BASIC","description":"Type of authentication to use when invoking the token endpoint.\n Current supported options:\n <ul>\n     <li>io.helidon.security.providers.oidc.common.OidcConfig.ClientAuthentication#CLIENT_SECRET_BASIC</li>\n     <li>io.helidon.security.providers.oidc.common.OidcConfig.ClientAuthentication#CLIENT_SECRET_POST</li>\n     <li>io.helidon.security.providers.oidc.common.OidcConfig.ClientAuthentication#NONE</li>\n </ul>","key":"token-endpoint-auth","method":"io.helidon.security.providers.oidc.common.OidcConfig.Builder#tokenEndpointAuthentication(io.helidon.security.providers.oidc.common.OidcConfig.ClientAuthentication)","type":"io.helidon.security.providers.oidc.common.OidcConfig.ClientAuthentication","allowedValues":[{"description":"Clients that have received a client_secret value from the Authorization Server authenticate with the Authorization\n Server in accordance with Section 2.3.1 of OAuth 2.0 [RFC6749] using the HTTP Basic authentication scheme.\n This is the default client authentication.","value":"CLIENT_SECRET_BASIC"},{"description":"Clients that have received a client_secret value from the Authorization Server, authenticate with the Authorization\n Server in accordance with Section 2.3.1 of OAuth 2.0 [RFC6749] by including the Client Credentials in the request body.","value":"CLIENT_SECRET_POST"},{"description":"Clients that have received a client_secret value from the Authorization Server create a JWT using an HMAC SHA\n algorithm, such as HMAC SHA-256. The HMAC (Hash-based Message Authentication Code) is calculated using the octets of\n the UTF-8 representation of the client_secret as the shared key.\n The Client authenticates in accordance with JSON Web Token (JWT) Profile for OAuth 2.0 Client Authentication and\n Authorization Grants [OAuth.JWT] and Assertion Framework for OAuth 2.0 Client Authentication and Authorization\n Grants [OAuth.Assertions].\n <p>\n The JWT MUST contain the following REQUIRED Claim Values and MAY contain the following\n OPTIONAL Claim Values.\n <p>\n Required:\n `iss, sub, aud, jti, exp`\n <p>\n Optional:\n `iat`","value":"CLIENT_SECRET_JWT"},{"description":"Clients that have registered a public key sign a JWT using that key. The Client authenticates in accordance with\n JSON Web Token (JWT) Profile for OAuth 2.0 Client Authentication and Authorization Grants [OAuth.JWT] and Assertion\n Framework for OAuth 2.0 Client Authentication and Authorization Grants [OAuth.Assertions].\n <p>\n The JWT MUST contain the following REQUIRED Claim Values and MAY contain the following\n OPTIONAL Claim Values.\n <p>\n Required:\n `iss, sub, aud, jti, exp`\n <p>\n Optional:\n `iat`","value":"PRIVATE_KEY_JWT"},{"description":"The Client does not authenticate itself at the Token Endpoint, either because it uses only the Implicit Flow (and so\n does not use the Token Endpoint) or because it is a Public Client with no Client Secret or other authentication\n mechanism.","value":"NONE"}]},{"defaultValue":"JSESSIONID","description":"Name of the cookie to use.\n Defaults to {@value #DEFAULT_COOKIE_NAME}.","key":"cookie-name","method":"io.helidon.security.providers.oidc.common.OidcConfig.Builder#cookieName(java.lang.String)"},{"description":"Client ID as generated by OIDC server.","key":"client-id","method":"io.helidon.security.providers.oidc.common.OidcConfig.Builder#clientId(java.lang.String)"},{"description":"URI of a token endpoint used to obtain a JWT based on the authentication\n code.\n If not defined, it is obtained from #oidcMetadata(Resource), if that is not defined\n an attempt is made to use #identityUri(URI)/oauth2/v1/token.","key":"token-endpoint-uri","method":"io.helidon.security.providers.oidc.common.OidcConfig.Builder#tokenEndpointUri(java.net.URI)","type":"java.net.URI"},{"defaultValue":"true","description":"Whether to use cookie to store JWT between requests.\n Defaults to {@value #DEFAULT_COOKIE_USE}.","key":"cookie-use","method":"io.helidon.security.providers.oidc.common.OidcConfig.Builder#useCookie(java.lang.Boolean)","type":"java.lang.Boolean"}]}]}]