[
  {
    "module": "io.helidon.common.configurable",
    "types": [
      {
        "annotatedType": "io.helidon.common.configurable.ThreadPoolSupplier.Builder",
        "type": "io.helidon.common.configurable.ThreadPoolSupplier",
        "producers": [
          "io.helidon.common.configurable.ThreadPoolSupplier.Builder#build()"
        ],
        "options": [
          {
            "defaultValue": "50",
            "description": "Max pool size of the thread pool executor.",
            "key": "max-pool-size",
            "method": "io.helidon.common.configurable.ThreadPoolSupplier.Builder#maxPoolSize(int)",
            "type": "java.lang.Integer"
          },
          {
            "defaultValue": "3",
            "description": "Keep alive minutes of the thread pool executor.",
            "key": "keep-alive-minutes",
            "method": "io.helidon.common.configurable.ThreadPoolSupplier.Builder#keepAliveMinutes(int)",
            "type": "java.lang.Integer"
          },
          {
            "defaultValue": "helidon-",
            "description": "Name prefix for threads in this thread pool executor.",
            "key": "thread-name-prefix",
            "method": "io.helidon.common.configurable.ThreadPoolSupplier.Builder#threadNamePrefix(java.lang.String)"
          },
          {
            "defaultValue": "true",
            "description": "Whether to prestart core threads in this thread pool executor.",
            "key": "should-prestart",
            "method": "io.helidon.common.configurable.ThreadPoolSupplier.Builder#prestart(boolean)",
            "type": "java.lang.Boolean"
          },
          {
            "defaultValue": "10",
            "description": "Core pool size of the thread pool executor.",
            "key": "core-pool-size",
            "method": "io.helidon.common.configurable.ThreadPoolSupplier.Builder#corePoolSize(int)",
            "type": "java.lang.Integer"
          },
          {
            "defaultValue": "false",
            "description": "When configured to `true`, an unbounded virtual executor service (project Loom) will be used\n if available.\n This is an experimental feature.\n <p>\n If enabled and available, all other configuration options of this executor service are ignored!",
            "key": "virtual-threads",
            "method": "io.helidon.common.configurable.ThreadPoolSupplier.Builder#virtualIfAvailable(boolean)",
            "type": "java.lang.Boolean",
            "experimental": true
          },
          {
            "defaultValue": "true",
            "description": "Is daemon of the thread pool executor.",
            "key": "is-daemon",
            "method": "io.helidon.common.configurable.ThreadPoolSupplier.Builder#daemon(boolean)",
            "type": "java.lang.Boolean"
          },
          {
            "defaultValue": "false",
            "description": "When configured to `true`, virtual thread executor service must be available, otherwise the built\n executor would fail to start.",
            "key": "virtual-enforced",
            "method": "io.helidon.common.configurable.ThreadPoolSupplier.Builder#virtualEnforced(boolean)",
            "type": "java.lang.Boolean",
            "experimental": true
          },
          {
            "defaultValue": "10000",
            "description": "Queue capacity of the thread pool executor.",
            "key": "queue-capacity",
            "method": "io.helidon.common.configurable.ThreadPoolSupplier.Builder#queueCapacity(int)",
            "type": "java.lang.Integer"
          }
        ]
      },
      {
        "annotatedType": "io.helidon.common.configurable.LruCache.Builder",
        "type": "io.helidon.common.configurable.LruCache",
        "producers": [
          "io.helidon.common.configurable.LruCache.Builder#build()"
        ],
        "options": [
          {
            "defaultValue": "10000",
            "description": "Configure capacity of the cache.",
            "key": "capacity",
            "method": "io.helidon.common.configurable.LruCache.Builder#capacity(int)",
            "type": "java.lang.Integer"
          }
        ]
      },
      {
        "annotatedType": "io.helidon.common.configurable.ScheduledThreadPoolSupplier.Builder",
        "type": "io.helidon.common.configurable.ScheduledThreadPoolSupplier",
        "producers": [
          "io.helidon.common.configurable.ScheduledThreadPoolSupplier.Builder#build()",
          "io.helidon.common.configurable.ScheduledThreadPoolSupplier#create(io.helidon.config.Config)"
        ],
        "options": [
          {
            "defaultValue": "helidon-",
            "description": "Name prefix for threads in this thread pool executor.",
            "key": "thread-name-prefix",
            "method": "io.helidon.common.configurable.ScheduledThreadPoolSupplier.Builder#threadNamePrefix(java.lang.String)"
          },
          {
            "defaultValue": "true",
            "description": "Whether to prestart core threads in this thread pool executor.",
            "key": "should-prestart",
            "method": "io.helidon.common.configurable.ScheduledThreadPoolSupplier.Builder#prestart(boolean)",
            "type": "java.lang.Boolean"
          },
          {
            "defaultValue": "16",
            "description": "Core pool size of the thread pool executor.",
            "key": "core-pool-size",
            "method": "io.helidon.common.configurable.ScheduledThreadPoolSupplier.Builder#corePoolSize(int)",
            "type": "java.lang.Integer"
          },
          {
            "defaultValue": "true",
            "description": "Is daemon of the thread pool executor.",
            "key": "is-daemon",
            "method": "io.helidon.common.configurable.ScheduledThreadPoolSupplier.Builder#daemon(boolean)",
            "type": "java.lang.Boolean"
          }
        ]
      },
      {
        "annotatedType": "io.helidon.common.configurable.Resource",
        "type": "io.helidon.common.configurable.Resource",
        "producers": [
          "io.helidon.common.configurable.Resource#create(io.helidon.config.Config)"
        ],
        "options": [
          {
            "description": "File system path to the resource.",
            "key": "path"
          },
          {
            "description": "Classpath location of the resource.",
            "key": "resource-path"
          },
          {
            "description": "Host of the proxy when using url.",
            "key": "proxy-host"
          },
          {
            "description": "URI of the resource.",
            "key": "uri",
            "type": "java.net.URI"
          },
          {
            "defaultValue": "true",
            "description": "Whether to use proxy. Only used if proxy-host is defined as well.",
            "key": "use-proxy",
            "type": "java.lang.Boolean"
          },
          {
            "description": "Plain text content of the resource",
            "key": "content-plain"
          },
          {
            "description": "Port of the proxy when using url.",
            "key": "proxy-port",
            "type": "java.lang.Integer"
          },
          {
            "description": "Base64 encoded content of the resource",
            "key": "content"
          }
        ]
      }
    ]
  }
]