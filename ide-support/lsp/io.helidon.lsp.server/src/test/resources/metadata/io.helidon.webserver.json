[{"module":"io.helidon.webserver","types":[{"annotatedType":"io.helidon.webserver.SocketConfiguration.SocketConfigurationBuilder","type":"io.helidon.webserver.SocketConfiguration.SocketConfigurationBuilder","options":[{"defaultValue":"1024","description":"Configures a maximum length of the queue of incoming connections on the server\n socket.\n <p>\n Default value is #DEFAULT_BACKLOG_SIZE.","key":"backlog","method":"io.helidon.webserver.SocketConfiguration.SocketConfigurationBuilder#backlog(int)","type":"java.lang.Integer"},{"defaultValue":"4096","description":"Maximal number of characters in the initial HTTP line.\n <p>\n Default is `4096`","key":"max-initial-line-length","method":"io.helidon.webserver.SocketConfiguration.SocketConfigurationBuilder#maxInitialLineLength(int)","type":"java.lang.Integer"},{"defaultValue":"0","description":"Configures a server port to listen on with the server socket. If port is\n `0` then any available ephemeral port will be used.","key":"port","method":"io.helidon.webserver.SocketConfiguration.SocketConfigurationBuilder#port(int)","type":"java.lang.Integer"},{"defaultValue":"0","description":"Socket timeout in milliseconds","key":"timeout-millis","method":"io.helidon.webserver.SocketConfiguration.SocketConfigurationBuilder#timeout(long, java.util.concurrent.TimeUnit)","type":"java.lang.Long"},{"description":"Configures proposed value of the TCP receive window that is advertised to the remote peer on the\n server socket.\n <p>\n If `0` then use implementation default.","key":"receive-buffer-size","method":"io.helidon.webserver.SocketConfiguration.SocketConfigurationBuilder#receiveBufferSize(int)","type":"java.lang.Integer"},{"description":"Configures local address where the server listens on with the server socket.\n If not configured, then listens an all local addresses.","key":"bind-address","method":"io.helidon.webserver.SocketConfiguration.SocketConfigurationBuilder#bindAddress(java.lang.String)","deprecated":true},{"description":"A helper method that just calls #bindAddress(String).","key":"host","method":"io.helidon.webserver.SocketConfiguration.SocketConfigurationBuilder#host(java.lang.String)"},{"defaultValue":"8192","description":"Maximal number of bytes of all header values combined. When a bigger value is received, a\n io.helidon.common.http.Http.Status#BAD_REQUEST_400\n is returned.\n <p>\n Default is `8192`","key":"max-header-size","method":"io.helidon.webserver.SocketConfiguration.SocketConfigurationBuilder#maxHeaderSize(int)","type":"java.lang.Integer"},{"defaultValue":"65536","description":"Set a maximum length of the content of an upgrade request.\n <p>\n Default is `64*1024`","key":"max-upgrade-content-length","method":"io.helidon.webserver.SocketConfiguration.SocketConfigurationBuilder#maxUpgradeContentLength(int)","type":"java.lang.Integer"},{"description":"Configures SSL for this socket. When configured, the server enforces SSL\n configuration.\n If this method is called, any other method except for #tls(java.util.function.Supplier)Â¨\n and repeated invocation of this method would be ignored.\n <p>\n If this method is called again, the previous configuration would be ignored.","key":"tls","method":"io.helidon.webserver.SocketConfiguration.SocketConfigurationBuilder#tls(io.helidon.webserver.WebServerTls)","type":"io.helidon.webserver.WebServerTls"},{"defaultValue":"false","description":"Enable negotiation for gzip/deflate content encodings. Clients can\n request compression using the \"Accept-Encoding\" header.\n <p>\n Default is `false`","key":"enable-compression","method":"io.helidon.webserver.SocketConfiguration.SocketConfigurationBuilder#enableCompression(boolean)","type":"java.lang.Boolean"},{"description":"Set a maximum payload size for a client request. Can prevent DoS\n attacks.","key":"max-payload-size","method":"io.helidon.webserver.SocketConfiguration.SocketConfigurationBuilder#maxPayloadSize(long)","type":"java.lang.Long"}]},{"annotatedType":"io.helidon.webserver.SocketConfiguration.Builder","type":"io.helidon.webserver.SocketConfiguration","inherits":["io.helidon.webserver.SocketConfiguration.SocketConfigurationBuilder"],"producers":["io.helidon.webserver.SocketConfiguration.Builder#build()"],"options":[{"description":"Configure a socket name, to bind named routings to.","key":"name","method":"io.helidon.webserver.SocketConfiguration.Builder#name(java.lang.String)","required":true}]},{"annotatedType":"io.helidon.webserver.WebServerTls.Builder","type":"io.helidon.webserver.WebServerTls","producers":["io.helidon.webserver.WebServerTls.Builder#build()","io.helidon.webserver.WebServerTls#create(io.helidon.config.Config)"],"options":[{"description":"Set the timeout for the cached SSL session objects, in seconds. `0` to use the\n default value.","key":"session-timeout-seconds","method":"io.helidon.webserver.WebServerTls.Builder#sessionTimeoutSeconds(long)","type":"java.lang.Long"},{"description":"Set allowed cipher suite. If an empty collection is set, an exception is thrown since\n it is required to support at least some ciphers.","key":"cipher-suite","kind":"LIST","method":"io.helidon.webserver.WebServerTls.Builder#allowedCipherSuite(java.util.List<java.lang.String>)"},{"defaultValue":"none","description":"Configures whether client authentication will be required or not.","key":"client-auth","method":"io.helidon.webserver.WebServerTls.Builder#clientAuth(io.helidon.webserver.ClientAuthentication)","type":"io.helidon.webserver.ClientAuthentication","allowedValues":[{"description":"Authentication is required.","value":"REQUIRE"},{"description":"Authentication is optional.","value":"OPTIONAL"},{"description":"Authentication is not required.","value":"NONE"}]},{"description":"Configure private key to use for SSL context.","key":"private-key","method":"io.helidon.webserver.WebServerTls.Builder#privateKey(io.helidon.common.pki.KeyConfig)","type":"io.helidon.common.pki.KeyConfig","required":true},{"description":"Set the size of the cache used for storing SSL session objects. `0` to use the\n default value.","key":"session-cache-size","method":"io.helidon.webserver.WebServerTls.Builder#sessionCacheSize(long)","type":"java.lang.Long"},{"description":"Set the trust key configuration to be used to validate certificates.","key":"trust","method":"io.helidon.webserver.WebServerTls.Builder#trust(io.helidon.common.pki.KeyConfig)","type":"io.helidon.common.pki.KeyConfig"},{"defaultValue":"true","description":"Can be used to disable TLS even if keys are configured.","key":"enabled","method":"io.helidon.webserver.WebServerTls.Builder#enabled(boolean)","type":"java.lang.Boolean"}]},{"annotatedType":"io.helidon.webserver.WebServer.Builder","description":"Configuration of the HTTP server.","prefix":"server","type":"io.helidon.webserver.WebServer","standalone":true,"inherits":["io.helidon.webserver.SocketConfiguration.SocketConfigurationBuilder"],"producers":["io.helidon.webserver.WebServer.Builder#build()"],"options":[{"description":"Adds an additional named server socket configuration. As a result, the server will listen\n on multiple ports.\n <p>\n An additional named server socket may have a dedicated Routing configured\n through io.helidon.webserver.WebServer.Builder#addNamedRouting(String, Routing).","key":"sockets","kind":"LIST","method":"io.helidon.webserver.WebServer.Builder#addSocket(io.helidon.webserver.SocketConfiguration)","type":"io.helidon.webserver.SocketConfiguration"},{"description":"Sets a count of threads in pool used to process HTTP requests.\n Default value is `CPU_COUNT * 2`.\n <p>\n Configuration key: `workers`","key":"worker-count","method":"io.helidon.webserver.WebServer.Builder#workersCount(int)","type":"java.lang.Integer"},{"defaultValue":"false","description":"Set to `true` to print detailed feature information on startup.","key":"features.print-details","method":"io.helidon.webserver.WebServer.Builder#printFeatureDetails(boolean)","type":"java.lang.Boolean"}]}]}]