#
# Copyright (c) 2022 Oracle and/or its affiliates.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Configuration of security providers, integration and other security options
# io.helidon.security.Security
security:
  # io.helidon.security.ProviderSelectionPolicyType
  # Type of the policy.
  # FIRST: Choose first provider from the list by default.  Choose provider with the name defined when explicit provider requested.
  # COMPOSITE: Can compose multiple providers together to form a single  logical provider.
  # CLASS: Explicit class for a custom ProviderSelectionPolicyType.
  provider-policy.type: "FIRST"
  # java.lang.Class
  # Provider selection policy class name, only used when type is set to CLASS
  # Generated value (property does not have a configured default)
  provider-policy.class-name: "net.example.SomeClass"
  # io.helidon.common.configurable.ThreadPoolSupplier
  # Configure executor service to be used for blocking operations within security.
  environment.executor-service:
    # java.lang.Integer
    # Max pool size of the thread pool executor.
    max-pool-size: 50
    # java.lang.Integer
    # Keep alive minutes of the thread pool executor.
    keep-alive-minutes: 3
    # java.lang.String
    # Name prefix for threads in this thread pool executor.
    thread-name-prefix: "helidon-"
    # java.lang.Boolean
    # Whether to prestart core threads in this thread pool executor.
    should-prestart: true
    # java.lang.Integer
    # Core pool size of the thread pool executor.
    core-pool-size: 10
    # java.lang.Boolean
    # When configured to `true`, an unbounded virtual executor service (project Loom) will be used  if available.  This is an experimental feature.  <p>  If enabled and available, all other configuration options of this executor service are ignored!
    virtual-threads: false
    # java.lang.Boolean
    # Is daemon of the thread pool executor.
    is-daemon: true
    # java.lang.Boolean
    # When configured to `true`, virtual thread executor service must be available, otherwise the built  executor would fail to start.
    virtual-enforced: false
    # java.lang.Integer
    # Queue capacity of the thread pool executor.
    queue-capacity: 10000
  # java.lang.Boolean
  # Whether or not tracing should be enabled. If set to false, security tracer will be a no-op tracer.
  tracing.enabled: true
  # io.helidon.security.SecurityTime
  # Server time to use when evaluating security policies that depend on time.
  environment.server-time:
    # java.lang.Long
    # Configure a time-shift in seconds, to move the current time to past or future.
    shift-by-seconds: 0
    # java.lang.Long
    # Set an explicit value for one of the time fields (such as ChronoField#YEAR).
    # Generated value (property does not have a configured default)
    year: 1000
    # java.lang.Long
    # Set an explicit value for one of the time fields (such as ChronoField#YEAR).
    # Generated value (property does not have a configured default)
    millisecond: 1000
    # java.lang.Long
    # Set an explicit value for one of the time fields (such as ChronoField#YEAR).
    # Generated value (property does not have a configured default)
    minute: 1000
    # java.lang.Long
    # Set an explicit value for one of the time fields (such as ChronoField#YEAR).
    # Generated value (property does not have a configured default)
    second: 1000
    # java.time.ZoneId
    # Override current time zone. The time will represent the SAME instant, in an explicit timezone.  <p>  If we are in a UTC time zone and you set the timezone to "Europe/Prague", the time will be shifted by the offset  of Prague (e.g. if it is noon right now in UTC, you would get 14:00).
    # Generated value (property does not have a configured default)
    time-zone: "UTC"
    # java.lang.Long
    # Set an explicit value for one of the time fields (such as ChronoField#YEAR).
    # Generated value (property does not have a configured default)
    month: 1000
    # java.lang.Long
    # Set an explicit value for one of the time fields (such as ChronoField#YEAR).
    # Generated value (property does not have a configured default)
    day-of-month: 1000
    # java.lang.Long
    # Set an explicit value for one of the time fields (such as ChronoField#YEAR).
    # Generated value (property does not have a configured default)
    hour-of-day: 1000
  # io.helidon.config.Config
  # Configured secrets
  secrets:
  - provider: "value"
    # java.lang.String
    # Name of the secret, used for lookup
    # Generated value (property does not have a configured default)
    name: "value"
    # io.helidon.security.SecretsProviderConfig
    # Configuration specific to the secret provider
    config:
    # There are no modules on classpath providing io.helidon.security.SecretsProviderConfig
  providers:
  - # Open ID Connect security provider
    oidc:
      # Add a new target configuration.
      outbound:
      - # java.lang.String
        # Add supported paths for this target. May be called more than once to add more paths.  The path is tested as is against called path, and also tested as a regular expression.
        paths: ["value","value"]
        # java.lang.String
        # Add supported method for this target. May be called more than once to add more methods.  The method is tested as is ignoring case against the used method.
        methods: ["value","value"]
        # java.lang.String
        # Add supported host for this target. May be called more than once to add more hosts.  <p>  Valid examples:  <ul>  <li>localhost  <li>www.google.com  <li>127.0.0.1  <li>*.oracle.com  <li>192.169.*.*  <li>*.google.*  </ul>
        hosts: ["value","value"]
        # java.lang.String
        # Configure the name of this outbound target.
        # *********** REQUIRED ***********
        # Generated value (property does not have a configured default)
        name: "value"
        # java.lang.String
        # Add supported transports for this target. May be called more than once to add more transports.  <p>  Valid examples:  <ul>  <li>http  <li>https  </ul>  There is no wildcard support
        transport: ["value","value"]
      # io.helidon.security.providers.oidc.common.OidcConfig
      # Configuration of OIDC (Open ID Connect).
      # java.net.URI
      # URI of the identity server, base used to retrieve OIDC metadata.
      # Generated value (property does not have a configured default)
      identity-uri: "https://www.example.net"
      # java.lang.String
      # URI to register web server component on, used by the OIDC server to  redirect authorization requests to after a user logs in or approves  scopes.  Note that usually the redirect URI configured here must be the  same one as configured on OIDC server.   <p>  Defaults to {@value #DEFAULT_REDIRECT_URI}
# Configuration of the HTTP server.
# io.helidon.webserver.WebServer
server:
  # io.helidon.webserver.SocketConfiguration
  # Adds an additional named server socket configuration. As a result, the server will listen  on multiple ports.  <p>  An additional named server socket may have a dedicated Routing configured  through io.helidon.webserver.WebServer.Builder#addNamedRouting(String, Routing).
  sockets:
  - # java.lang.String
    # Configure a socket name, to bind named routings to.
    # *********** REQUIRED ***********
    # Generated value (property does not have a configured default)
    name: "value"
    # java.lang.Integer
    # Configures a maximum length of the queue of incoming connections on the server  socket.  <p>  Default value is #DEFAULT_BACKLOG_SIZE.
    backlog: 1024
    # java.lang.Integer
    # Maximal number of characters in the initial HTTP line.  <p>  Default is `4096`
    max-initial-line-length: 4096
    # java.lang.Integer
    # Configures a server port to listen on with the server socket. If port is  `0` then any available ephemeral port will be used.
    port: 0
    # java.lang.Long
    # Socket timeout in milliseconds
    timeout-millis: 0
    # java.lang.Integer
    # Configures proposed value of the TCP receive window that is advertised to the remote peer on the  server socket.  <p>  If `0` then use implementation default.
    # Generated value (property does not have a configured default)
    receive-buffer-size: 1
    # java.lang.String
    # Configures local address where the server listens on with the server socket.  If not configured, then listens an all local addresses.
    # Generated value (property does not have a configured default)
    bind-address: "value"
    # java.lang.String
    # A helper method that just calls #bindAddress(String).
    # Generated value (property does not have a configured default)
    host: "value"
    # java.lang.Integer
    # Maximal number of bytes of all header values combined. When a bigger value is received, a  io.helidon.common.http.Http.Status#BAD_REQUEST_400  is returned.  <p>  Default is `8192`
    max-header-size: 8192
    # java.lang.Integer
    # Set a maximum length of the content of an upgrade request.  <p>  Default is `64*1024`
    max-upgrade-content-length: 65536
    # io.helidon.webserver.WebServerTls
    # Configures SSL for this socket. When configured, the server enforces SSL  configuration.  If this method is called, any other method except for #tls(java.util.function.Supplier)Â¨  and repeated invocation of this method would be ignored.  <p>  If this method is called again, the previous configuration would be ignored.
    tls:
      # java.lang.Long
      # Set the timeout for the cached SSL session objects, in seconds. `0` to use the  default value.
      # Generated value (property does not have a configured default)
      session-timeout-seconds: 1000
      # java.lang.String
      # Set allowed cipher suite. If an empty collection is set, an exception is thrown since  it is required to support at least some ciphers.
      cipher-suite: ["value","value"]
      # io.helidon.webserver.ClientAuthentication
      # Configures whether client authentication will be required or not.
      # REQUIRE: Authentication is required.
      # OPTIONAL: Authentication is optional.
      # NONE: Authentication is not required.
      client-auth: "none"